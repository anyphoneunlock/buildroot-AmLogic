From 11bd39c81c272b13ef8807367811bef701c152d7 Mon Sep 17 00:00:00 2001
From: janbar <jlbarriere68@gmail.com>
Date: Fri, 22 Mar 2013 02:03:33 +0100
Subject: [PATCH 1/3] [cmyth] Setup DST unavailable for new timestamp

---
 lib/cmyth/libcmyth/timestamp.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/cmyth/libcmyth/timestamp.c b/lib/cmyth/libcmyth/timestamp.c
index 60dd5f5..7943daa 100644
--- a/lib/cmyth/libcmyth/timestamp.c
+++ b/lib/cmyth/libcmyth/timestamp.c
@@ -60,7 +60,7 @@
 	ret->timestamp_hour = 0;
 	ret->timestamp_minute = 0;
 	ret->timestamp_second = 0;
-	ret->timestamp_isdst = 0;
+	ret->timestamp_isdst = -1;
 	return ret;
 }
 
-- 
1.8.1.5


From d19663ab9fa01ab298d3d543f40ad9ff680a44d9 Mon Sep 17 00:00:00 2001
From: janbar <jlbarriere68@gmail.com>
Date: Sat, 23 Mar 2013 00:51:39 +0100
Subject: [PATCH 2/3] [cmyth] Review of "GET_RECORDING TIMESLOT"

- Review error handling of cmyth_timestamp functions.
- Add new function cmyth_timestamp_to_numstring() to support DateTime big endian format used by "GET_RECORDING TIMESLOT".
- Remove unix time conversion in cmyth_proginfo_get_from_timeslot() and use cmyth_timestamp_t instead.
---
 lib/cmyth/include/cmyth/cmyth.h  |  4 +--
 lib/cmyth/libcmyth/cmyth_local.h |  1 +
 lib/cmyth/libcmyth/proginfo.c    | 21 +++---------
 lib/cmyth/libcmyth/timestamp.c   | 73 +++++++++++++++++++++++++++++++++-------
 4 files changed, 68 insertions(+), 31 deletions(-)

diff --git a/lib/cmyth/include/cmyth/cmyth.h b/lib/cmyth/include/cmyth/cmyth.h
index f9e90c9..f103a08 100644
--- a/lib/cmyth/include/cmyth/cmyth.h
+++ b/lib/cmyth/include/cmyth/cmyth.h
@@ -730,7 +730,7 @@ extern int cmyth_timestamp_to_display_string(char *str, cmyth_timestamp_t ts,
 
 extern int cmyth_datetime_to_string(char *str, cmyth_timestamp_t ts);
 
-extern cmyth_timestamp_t cmyth_datetime_from_string(char *str);
+extern int cmyth_timestamp_to_numstring(char *str, cmyth_timestamp_t ts);
 
 extern int cmyth_timestamp_compare(cmyth_timestamp_t ts1,
 				   cmyth_timestamp_t ts2);
@@ -837,7 +837,7 @@ extern cmyth_proginfo_t cmyth_proginfo_get_from_basename(cmyth_conn_t control,
  */
 extern cmyth_proginfo_t cmyth_proginfo_get_from_timeslot(cmyth_conn_t control,
 					   uint32_t chanid,
-					   time_t recstartts);
+					   cmyth_timestamp_t recstartts);
 
 /**
  * Retrieve the title of a program.
diff --git a/lib/cmyth/libcmyth/cmyth_local.h b/lib/cmyth/libcmyth/cmyth_local.h
index d999163..619db48 100644
--- a/lib/cmyth/libcmyth/cmyth_local.h
+++ b/lib/cmyth/libcmyth/cmyth_local.h
@@ -62,6 +62,7 @@
 #define CMYTH_INT16_LEN (sizeof("-65536") - 1)
 #define CMYTH_INT8_LEN (sizeof("-256") - 1)
 #define CMYTH_TIMESTAMP_LEN (sizeof("YYYY-MM-DDTHH:MM:SS") - 1)
+#define CMYTH_TIMESTAMP_NUMERIC_LEN (sizeof("YYYYMMDDHHMMSS") - 1)
 #define CMYTH_DATESTAMP_LEN (sizeof("YYYY-MM-DD") - 1)
 #define CMYTH_UTC_LEN (sizeof("1240120680") - 1)
 #define CMYTH_COMMBREAK_START 4
diff --git a/lib/cmyth/libcmyth/proginfo.c b/lib/cmyth/libcmyth/proginfo.c
index 8c04432..e4df6e8 100644
--- a/lib/cmyth/libcmyth/proginfo.c
+++ b/lib/cmyth/libcmyth/proginfo.c
@@ -1846,14 +1846,13 @@
 }
 
 cmyth_proginfo_t
-cmyth_proginfo_get_from_timeslot(cmyth_conn_t control, uint32_t chanid, time_t recstartts)
+cmyth_proginfo_get_from_timeslot(cmyth_conn_t control, uint32_t chanid, const cmyth_timestamp_t recstartts)
 {
 	int err = 0;
 	int count, i;
 	char msg[4096];
 	cmyth_proginfo_t prog = NULL;
 	cmyth_proglist_t list = NULL;
-	cmyth_timestamp_t ts;
 	char time[15];
 
 	if (!control) {
@@ -1862,22 +1861,12 @@
 		return NULL;
 	}
 
-	ts = cmyth_timestamp_from_unixtime(recstartts);
-	if (!ts) {
-		cmyth_dbg(CMYTH_DBG_ERROR, "%s: timestamp NULL\n",
-			  __FUNCTION__);
+	if ((err=cmyth_timestamp_to_numstring(time, recstartts)) < 0) {
+		cmyth_dbg(CMYTH_DBG_ERROR, "%s: cmyth_timestamp_to_numstring() failed (%d)\n",
+			  __FUNCTION__, err);
 		return NULL;
 	}
 
-	sprintf(time,
-		"%4.4ld%2.2ld%2.2ld%2.2ld%2.2ld%2.2ld",
-		ts->timestamp_year,
-		ts->timestamp_month,
-		ts->timestamp_day,
-		ts->timestamp_hour,
-		ts->timestamp_minute,
-		ts->timestamp_second);
-
 	if(control->conn_version >= 32) {
 		pthread_mutex_lock(&control->conn_mutex);
 
@@ -1944,7 +1933,7 @@
 					  __FUNCTION__);
 				continue;
 			}
-			if (cmyth_timestamp_compare(prog->proginfo_rec_start_ts, ts) != 0 ||
+			if (cmyth_timestamp_compare(prog->proginfo_rec_start_ts, recstartts) != 0 ||
 					prog->proginfo_chanId != chanid) {
 				ref_release(prog);
 				prog = NULL;
diff --git a/lib/cmyth/libcmyth/timestamp.c b/lib/cmyth/libcmyth/timestamp.c
index 7943daa..f4607aa 100644
--- a/lib/cmyth/libcmyth/timestamp.c
+++ b/lib/cmyth/libcmyth/timestamp.c
@@ -201,7 +201,7 @@
 cmyth_timestamp_t
 cmyth_timestamp_from_tm(struct tm * tm_datetime)
 {
-    	cmyth_timestamp_t ret;
+	cmyth_timestamp_t ret;
 	ret = cmyth_timestamp_create();
 	if (!ret) {
 		cmyth_dbg(CMYTH_DBG_ERROR, "%s: NULL timestamp\n",
@@ -263,15 +263,20 @@
 time_t
 cmyth_timestamp_to_unixtime(cmyth_timestamp_t ts)
 {
-    struct tm tm;
-    tm.tm_sec = ts->timestamp_second;
-    tm.tm_min = ts->timestamp_minute;
-    tm.tm_hour = ts->timestamp_hour;
-    tm.tm_mday = ts->timestamp_day;
-    tm.tm_mon = ts->timestamp_month-1;
-    tm.tm_year = ts->timestamp_year-1900;
-    tm.tm_isdst = ts->timestamp_isdst;
-    return mktime(&tm);
+	if (!ts) {
+		cmyth_dbg(CMYTH_DBG_ERROR, "%s: NULL timestamp provided\n",
+			  __FUNCTION__);
+		return -EINVAL;
+	}
+	struct tm tm;
+	tm.tm_sec = ts->timestamp_second;
+	tm.tm_min = ts->timestamp_minute;
+	tm.tm_hour = ts->timestamp_hour;
+	tm.tm_mday = ts->timestamp_day;
+	tm.tm_mon = ts->timestamp_month-1;
+	tm.tm_year = ts->timestamp_year-1900;
+	tm.tm_isdst = ts->timestamp_isdst;
+	return mktime(&tm);
 }
 
 /*
@@ -285,6 +290,7 @@
  * user supplied buffer 'str'.  The size of 'str' must be
  * CMYTH_TIMESTAMP_LEN + 1 or this will overwrite beyond 'str'.
  *
+ * Format: ISO-8601 '%Y-%m-%dT%H:%i:%s' "2013-03-21T18:02:59"
  *
  * Return Value:
  *
@@ -327,6 +333,7 @@
  * user supplied buffer 'str'.  The size of 'str' must be
  * CMYTH_TIMESTAMP_LEN + 1 or this will overwrite beyond 'str'.
  *
+ * Format: ISO-8601 '%Y-%m-%d' "2013-03-21"
  *
  * Return Value:
  *
@@ -356,8 +363,7 @@
 }
 
 int
-cmyth_timestamp_to_display_string(char *str, cmyth_timestamp_t ts,
-																	int time_format_12)
+cmyth_timestamp_to_display_string(char *str, cmyth_timestamp_t ts, int time_format_12)
 {
 	if (!str) {
 		cmyth_dbg(CMYTH_DBG_ERROR, "%s: NULL output string provided\n",
@@ -455,7 +461,48 @@
 	return 0;
 }
 
-
+/*
+ * cmyth_timestamp_to_numstring(char *str, cmyth_timestamp_t ts)
+ *
+ * Scope: PUBLIC
+ *
+ * Description
+ *
+ * Create a string from the timestamp structure 'ts' and put it in the
+ * user supplied buffer 'str'.  The size of 'str' must be
+ * CMYTH_TIMESTAMP_NUMERIC_LEN + 1 or this will overwrite beyond 'str'.
+ *
+ * Format: Numeric big endian '%Y%m%d%H%i%s' "20130321180259"
+ *
+ * Return Value:
+ *
+ * Success: 0
+ *
+ * Failure: -(ERRNO)
+ */
+int
+cmyth_timestamp_to_numstring(char *str, cmyth_timestamp_t ts)
+{
+	if (!str) {
+		cmyth_dbg(CMYTH_DBG_ERROR, "%s: NULL output string provided\n",
+			  __FUNCTION__);
+		return -EINVAL;
+	}
+	if (!ts) {
+		cmyth_dbg(CMYTH_DBG_ERROR, "%s: NULL timestamp provided\n",
+			  __FUNCTION__);
+		return -EINVAL;
+	}
+	sprintf(str,
+		"%4.4ld%2.2ld%2.2ld%2.2ld%2.2ld%2.2ld",
+		ts->timestamp_year,
+		ts->timestamp_month,
+		ts->timestamp_day,
+		ts->timestamp_hour,
+		ts->timestamp_minute,
+		ts->timestamp_second);
+	return 0;
+}
 
 /*
  * cmyth_timestamp_compare(cmyth_timestamp_t ts1, cmyth_timestamp_t ts2)
-- 
1.8.1.5


From 3cfa9e5d27072f141de2029323766655324a7eed Mon Sep 17 00:00:00 2001
From: janbar <jlbarriere68@gmail.com>
Date: Sat, 23 Mar 2013 00:53:25 +0100
Subject: [PATCH 3/3] [mythtv-cmyth] Review of "GET_RECORDING TIMESLOT"

- Remove unix time conversion and use MythTimestamp class instead.
---
 addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.cpp |  6 +++---
 addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.h   |  3 ++-
 addons/pvr.mythtv.cmyth/src/cppmyth/MythEventHandler.h | 18 ++++++------------
 addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.cpp  |  7 +++++++
 addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.h    |  3 +++
 addons/pvr.mythtv.cmyth/src/pvrclient-mythtv.cpp       |  2 +-
 6 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.cpp b/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.cpp
index 02e4658..fd46a18 100644
--- a/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.cpp
+++ b/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.cpp
@@ -249,13 +249,13 @@ MythProgramInfo MythConnection::GetRecordedProgram(const CStdString &basename)
   return retval;
 }
 
-MythProgramInfo MythConnection::GetRecordedProgram(int chanid, time_t recstartts)
+MythProgramInfo MythConnection::GetRecordedProgram(int chanid, const MythTimestamp &recstartts)
 {
   MythProgramInfo retval;
   cmyth_proginfo_t prog = NULL;
-  if (chanid > 0 && recstartts > 0)
+  if (chanid > 0 && !recstartts.IsNull())
   {
-    CMYTH_CONN_CALL_REF(prog, prog == NULL, cmyth_proginfo_get_from_timeslot(*m_conn_t, chanid, recstartts));
+    CMYTH_CONN_CALL_REF(prog, prog == NULL, cmyth_proginfo_get_from_timeslot(*m_conn_t, chanid, *recstartts.m_timestamp_t));
     if (prog) {
       retval = MythProgramInfo(prog);
     }
diff --git a/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.h b/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.h
index 022df6e..c1fe008 100644
--- a/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.h
+++ b/addons/pvr.mythtv.cmyth/src/cppmyth/MythConnection.h
@@ -35,6 +35,7 @@
 class MythEventHandler;
 class MythRecordingRule;
 class MythStorageGroupFile;
+class MythTimestamp;
 
 template <class T> class MythPointer;
 template <class T> class MythPointerThreadSafe;
@@ -75,7 +76,7 @@ class MythConnection
   bool DeleteRecording(MythProgramInfo &recording);
   ProgramInfoMap GetRecordedPrograms();
   MythProgramInfo GetRecordedProgram(const CStdString &basename);
-  MythProgramInfo GetRecordedProgram(int chanid, time_t recstartts);
+  MythProgramInfo GetRecordedProgram(int chanid, const MythTimestamp &recstartts);
 
   // Timers
   ProgramInfoMap GetPendingPrograms();
diff --git a/addons/pvr.mythtv.cmyth/src/cppmyth/MythEventHandler.h b/addons/pvr.mythtv.cmyth/src/cppmyth/MythEventHandler.h
index 359964b..c4cc93c 100644
--- a/addons/pvr.mythtv.cmyth/src/cppmyth/MythEventHandler.h
+++ b/addons/pvr.mythtv.cmyth/src/cppmyth/MythEventHandler.h
@@ -78,21 +78,16 @@ class MythEventHandler
   class RecordingChangeEvent
   {
   public:
-    RecordingChangeEvent(RecordingChangeType type, unsigned int chanid, char *recstartts)
+    RecordingChangeEvent(RecordingChangeType type, unsigned int chanid, const CStdString &recstartts)
       : m_type(type)
       , m_channelID(chanid)
-      , m_recordStartTimeSlot(0)
     {
-      if (recstartts) {
-        MythTimestamp time(recstartts, false);
-        m_recordStartTimeSlot = time.UnixTime();
-      }
+      m_recordStartTimeSlot = MythTimestamp(recstartts, false);
     }
 
     RecordingChangeEvent(RecordingChangeType type, const MythProgramInfo &prog)
       : m_type(type)
       , m_channelID(0)
-      , m_recordStartTimeSlot(0)
       , m_prog(prog)
     {
     }
@@ -100,20 +95,19 @@ class MythEventHandler
     RecordingChangeEvent(RecordingChangeType type)
       : m_type(type)
       , m_channelID(0)
-      , m_recordStartTimeSlot(0)
     {
     }
 
     RecordingChangeType Type() const { return m_type; }
     unsigned int ChannelID() const { return m_channelID; };
-    time_t RecordingStartTimeslot() const { return m_recordStartTimeSlot; }
+    MythTimestamp RecordingStartTimeslot() const { return m_recordStartTimeSlot; }
     MythProgramInfo Program() const { return m_prog; }
 
   private:
     RecordingChangeType m_type;
-    unsigned int m_channelID;     // ADD and DELETE
-    time_t m_recordStartTimeSlot; // ADD and DELETE
-    MythProgramInfo m_prog;       // UPDATE
+    unsigned int m_channelID;              // ADD and DELETE
+    MythTimestamp m_recordStartTimeSlot;   // ADD and DELETE
+    MythProgramInfo m_prog;                // UPDATE
   };
 
   bool HasRecordingChangeEvent() const;
diff --git a/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.cpp b/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.cpp
index 8518c63..f8ec968 100644
--- a/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.cpp
+++ b/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.cpp
@@ -94,3 +94,10 @@ CStdString MythTimestamp::DisplayString(bool use12hClock)
   bool succeded=cmyth_timestamp_to_display_string(time, *m_timestamp_t, use12hClock) == 0;
   return succeded ? CStdString(time) : CStdString("");
 }
+
+CStdString MythTimestamp::NumString()
+{
+  char time[15];
+  bool succeded = cmyth_timestamp_to_numstring(time, *m_timestamp_t) == 0;
+  return succeded ? CStdString(time) : CStdString("");
+}
\ No newline at end of file
diff --git a/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.h b/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.h
index ecff511..a4ee3a5 100644
--- a/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.h
+++ b/addons/pvr.mythtv.cmyth/src/cppmyth/MythTimestamp.h
@@ -32,6 +32,8 @@
 class MythTimestamp
 {
 public:
+  friend class MythConnection;
+
   MythTimestamp();
   MythTimestamp(cmyth_timestamp_t cmyth_timestamp);
   MythTimestamp(CStdString time, bool datetime);
@@ -50,6 +52,7 @@ class MythTimestamp
   CStdString String();
   CStdString IsoString();
   CStdString DisplayString(bool use12hClock);
+  CStdString NumString();
 
 private:
   boost::shared_ptr<MythPointer<cmyth_timestamp_t> > m_timestamp_t;
diff --git a/addons/pvr.mythtv.cmyth/src/pvrclient-mythtv.cpp b/addons/pvr.mythtv.cmyth/src/pvrclient-mythtv.cpp
index ed948a0..9f1414c 100644
--- a/addons/pvr.mythtv.cmyth/src/pvrclient-mythtv.cpp
+++ b/addons/pvr.mythtv.cmyth/src/pvrclient-mythtv.cpp
@@ -622,7 +622,7 @@ void PVRClientMythTV::EventUpdateRecordings()
           }
         }
         else
-          XBMC->Log(LOG_ERROR, "%s - Add recording failed for %u %ld", __FUNCTION__, event.ChannelID(), event.RecordingStartTimeslot());
+          XBMC->Log(LOG_ERROR, "%s - Add recording failed for %u %s", __FUNCTION__, event.ChannelID(), event.RecordingStartTimeslot().NumString().c_str());
         break;
       }
       case MythEventHandler::CHANGE_UPDATE:
-- 
1.8.1.5

